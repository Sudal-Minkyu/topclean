version: 0.2

phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...==========================================
      - export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
      - export AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
      - aws ecr get-login-password --region ap-northeast-2 | docker login --username AWS --password-stdin 681810644781.dkr.ecr.ap-northeast-2.amazonaws.com
      - aws eks --region ap-northeast-2 update-kubeconfig --name toppos
  install:
    runtime-versions:
      java: corretto8
  build:
    commands:
      - echo Started build phase..
      - mvn clean package
      - cp xxx xxx
      - echo Building the Docker image...
      - docker build -t toppos .
      - docker tag toppos:latest 681810644781.dkr.ecr.ap-northeast-2.amazonaws.com/toppos:$CODEBUILD_RESOLVED_SOURCE_VERSION
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - echo Image_Version - $CODEBUILD_RESOLVED_SOURCE_VERSION
      - docker push 681810644781.dkr.ecr.ap-northeast-2.amazonaws.com/toppos:$CODEBUILD_RESOLVED_SOURCE_VERSION
      - echo List directory
      - ls -la
      - echo Push the latest image to cluster
      - REPOSITORY_URI=681810644781.dkr.ecr.ap-northeast-2.amazonaws.com/toppos
      - sed -i 's@CONTAINER_IMAGE_TAG@'"$REPOSITORY_URI:$CODEBUILD_RESOLVED_SOURCE_VERSION"'@' k8s-deploy.yaml
      - DB_URL=${NEWDEAL_DATASOURCE_HOST}
      - sed -i 's@NEWDEAL_DATASOURCE_HOST_TAG@'"$DB_URL"'@' k8s-deploy.yaml
      - DB_PORT=${NEWDEAL_DATASOURCE_PORT}
      - sed -i 's@NEWDEAL_DATASOURCE_PORT_TAG@'"$DB_PORT"'@' k8s-deploy.yaml
      - DB_NAME=${NEWDEAL_DATASOURCE_DBNAME}
      - sed -i 's@NEWDEAL_DATASOURCE_DBNAME_TAG@'"$DB_NAME"'@' k8s-deploy.yaml
      - DB_USER=${NEWDEAL_DATASOURCE_USERNAME}
      - sed -i 's@NEWDEAL_DATASOURCE_USERNAME_TAG@'"$DB_USER"'@' k8s-deploy.yaml
      - DB_PWD=${NEWDEAL_DATASOURCE_PASSWORD}
      - sed -i 's@NEWDEAL_DATASOURCE_PASSWORD_TAG@'"$DB_PWD"'@' k8s-deploy.yaml
      - URL_FRONT=${NEWDEAL_API_FRONT_URL}
      - sed -i 's@NEWDEAL_API_FRONT_URL_TAG@'"$URL_FRONT"'@' k8s-deploy.yaml
      - URL_SECURITY=${NEWDEAL_API_SECURITY_URL}
      - sed -i 's@NEWDEAL_API_SECURITY_URL_TAG@'"$URL_SECURITY"'@' k8s-deploy.yaml
      - URL_BACKEND=${NEWDEAL_API_BACKEND_URL}
      - sed -i 's@NEWDEAL_API_BACKEND_URL_TAG@'"$URL_BACKEND"'@' k8s-deploy.yaml
      - URL_BACKEND_PROTOCOL=${NEWDEAL_API_BACKEND_PROTOCOL}
      - sed -i 's@NEWDEAL_API_BACKEND_PROTOCOL_TAG@'"$URL_BACKEND_PROTOCOL"'@' k8s-deploy.yaml
      - URL_FRONT_PROTOCOL=${NEWDEAL_API_FRONT_PROTOCOL}
      - sed -i 's@NEWDEAL_API_FRONT_PROTOCOL_TAG@'"$URL_FRONT_PROTOCOL"'@' k8s-deploy.yaml
      - URL_SECURITY_PROTOCOL=${NEWDEAL_API_SECURITY_PROTOCOL}
      - sed -i 's@NEWDEAL_API_SECURITY_PROTOCOL_TAG@'"$URL_SECURITY_PROTOCOL"'@' k8s-deploy.yaml
      - FILEUPLOAD_URL=${NEWDEAL_FILEUPLOAD_URL}
      - sed -i 's@NEWDEAL_FILEUPLOAD_URL_TAG@'"$FILEUPLOAD_URL"'@' k8s-deploy.yaml
      - kubectl apply -f k8s-deploy.yaml